{"mappings":"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","sources":["app.js"],"sourcesContent":["var body;\n\nfunction uploadCSV() {\n    const fileInput = document.getElementById('csvFileInput');\n    const file = fileInput.files[0];\n  \n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      fetch('https://1546-36-69-110-154.ngrok-free.app/pred', {\n        method: 'POST',\n        body: formData\n      })\n\n      .then(async (res) => {\n        body = await res.json();\n        console.log(body.url);\n        // generateTable();\n        })\n\n      .catch(error => {\n        console.error('Error:', error);\n      });\n    }\n}\n\nfunction generateTable10(){\nfetch(body.url)\n  .then(response => response.text())\n  .then(csvData => {\n    const tableContainer = document.getElementById('table-container');\n    const table = document.createElement('table');\n\n    const rows = csvData.split('\\n');\n\n    const headerRow = document.createElement('tr');\n    rows[0].split(',').forEach(cellData => {\n      const th = document.createElement('th');\n      th.textContent = cellData;\n      headerRow.appendChild(th);\n    });\n    table.appendChild(headerRow);\n\n    for (let i = 1; i < 11; i++) {\n      const rowData = rows[i].split(',');\n      const row = document.createElement('tr');\n      rowData.forEach(cellData => {\n        const td = document.createElement('td');\n        td.textContent = cellData;\n        row.appendChild(td);\n      });\n      table.appendChild(row);\n    }\n\n    tableContainer.appendChild(table);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\n}\n\n\nfunction generateTable100(){\n  fetch(body.url)\n    .then(response => response.text())\n    .then(csvData => {\n      const tableContainer = document.getElementById('table-container');\n      const table = document.createElement('table');\n  \n      const rows = csvData.split('\\n');\n  \n      const headerRow = document.createElement('tr');\n      rows[0].split(',').forEach(cellData => {\n        const th = document.createElement('th');\n        th.textContent = cellData;\n        headerRow.appendChild(th);\n      });\n      table.appendChild(headerRow);\n  \n      for (let i = 1; i < 101; i++) {\n        const rowData = rows[i].split(',');\n        const row = document.createElement('tr');\n        rowData.forEach(cellData => {\n          const td = document.createElement('td');\n          td.textContent = cellData;\n          row.appendChild(td);\n        });\n        table.appendChild(row);\n      }\n  \n      tableContainer.appendChild(table);\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  \n  }\n\nfunction downloadFile(){\n  fetch(body.url)\n  .then(response => response.text())\n  .then(csvData => {\n    const csvFilename = 'output.csv';\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8' });\n\n    if (typeof window.saveAs === 'function') {\n      saveAs(blob, csvFilename);\n    } else {\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = csvFilename;\n\n      link.click();\n    }\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n}"],"names":[],"version":3,"file":"home.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}